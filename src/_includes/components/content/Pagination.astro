---
interface Props {
	pagid: string;
}

const { pagid } = Astro.props;
---

<div class="d-none justify-content-around" pag-id={pagid}>
  <button id="prev" class="btn btn-primary">Prev</button>
  <button id="submit" class="btn btn-primary d-none">Submit</button>
  <button id="next" class="btn btn-primary">Next</button>
</div>

<script>
  import { PaperService } from "@webslab/shared/services";

  import { authService } from "$lib/auth";
  import type { Module } from "$lib/types";

  const slug = new URLSearchParams(globalThis.location.search).get("slug");

  const pagination = document.querySelector("[pag-id]");
  const article = document.querySelector("#article");
  const submit = pagination.querySelector("#submit");
  const prev = pagination.querySelector("#prev");
  const next = pagination.querySelector("#next");

  authService.isReady.then(async () => {
    const db = authService.getDb();
    const [[module_]]: Module[][] = await db.query("SELECT * FROM module WHERE slug IS $slug;", { slug });

    const paperSvc = new PaperService(module_, authService);

    const pages = module_.content;
    // let currentPage = 0;
    let currentPage = 0;

    if (pages.length === 1) {
      return;
    }

    pagination.classList.remove("d-none");
    pagination.classList.add("d-flex");

    if (currentPage === 0) {
      prev.disabled = true;
      submit.disabled = true;
    }

    if (currentPage === pages.length - 1) {
      next.disabled = true;
    }

    globalThis.addEventListener("popstate", (evt) => {
      if (currentPage > 0) {
        prev.click();
        return;
      }

      // history.go(1);
    });

    prev.addEventListener("click", () => {
      if (currentPage > 0) {
        paperSvc.prev(currentPage);

        currentPage--;
        article.innerHTML = pages[currentPage];
      }

      if (currentPage === 0) {
        if (next.classList.contains("d-none")) {
          next.classList.remove("d-none");
        }
        if (!submit.classList.contains("d-none")) {
          submit.classList.add("d-none");
        }

        next.disabled = false;
        prev.disabled = true;
      }

      location.hash = `#post-title`;
    });

    next.addEventListener("click", () => {
      if (currentPage < pages.length - 1) {
        paperSvc.next(currentPage);

        currentPage++;
        article.innerHTML = pages[currentPage];
      }

      if (currentPage === pages.length - 1) {
        if (submit.classList.contains("d-none")) {
          submit.classList.remove("d-none");
        }

        submit.disabled = false;

        next.disabled = true;
        next.classList.add("d-none");
      }

      // order matters
      location.hash = `#post-title`;
      prev.disabled = false;
    });

    submit.addEventListener("click", async () => {
      try {
        await paperSvc.submit(currentPage);
      } catch (error) {
        console.error(error);
      }

      globalThis.location.href = `/content/modules/`;
    });
  });
</script>
